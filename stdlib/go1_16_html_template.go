// Code generated by 'yaegi extract html/template'. DO NOT EDIT.

// +build go1.16,!go1.17

package stdlib

import (
	"html/template"
	"reflect"
)

func init() {
	Symbols["html/template/template"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ErrAmbigContext":      reflect.ValueOf(template.ErrAmbigContext),
		"ErrBadHTML":           reflect.ValueOf(template.ErrBadHTML),
		"ErrBranchEnd":         reflect.ValueOf(template.ErrBranchEnd),
		"ErrEndContext":        reflect.ValueOf(template.ErrEndContext),
		"ErrNoSuchTemplate":    reflect.ValueOf(template.ErrNoSuchTemplate),
		"ErrOutputContext":     reflect.ValueOf(template.ErrOutputContext),
		"ErrPartialCharset":    reflect.ValueOf(template.ErrPartialCharset),
		"ErrPartialEscape":     reflect.ValueOf(template.ErrPartialEscape),
		"ErrPredefinedEscaper": reflect.ValueOf(template.ErrPredefinedEscaper),
		"ErrRangeLoopReentry":  reflect.ValueOf(template.ErrRangeLoopReentry),
		"ErrSlashAmbig":        reflect.ValueOf(template.ErrSlashAmbig),
		"HTMLEscape":           reflect.ValueOf(template.HTMLEscape),
		"HTMLEscapeString":     reflect.ValueOf(template.HTMLEscapeString),
		"HTMLEscaper":          reflect.ValueOf(template.HTMLEscaper),
		"IsTrue":               reflect.ValueOf(template.IsTrue),
		"JSEscape":             reflect.ValueOf(template.JSEscape),
		"JSEscapeString":       reflect.ValueOf(template.JSEscapeString),
		"JSEscaper":            reflect.ValueOf(template.JSEscaper),
		"Must":                 reflect.ValueOf(template.Must),
		"New":                  reflect.ValueOf(template.New),
		"OK":                   reflect.ValueOf(template.OK),
		"ParseFS":              reflect.ValueOf(template.ParseFS),
		"ParseFiles":           reflect.ValueOf(template.ParseFiles),
		"ParseGlob":            reflect.ValueOf(template.ParseGlob),
		"URLQueryEscaper":      reflect.ValueOf(template.URLQueryEscaper),

		// type definitions
		"CSS":       reflect.ValueOf((*template.CSS)(nil)),
		"Error":     reflect.ValueOf((*template.Error)(nil)),
		"ErrorCode": reflect.ValueOf((*template.ErrorCode)(nil)),
		"FuncMap":   reflect.ValueOf((*template.FuncMap)(nil)),
		"HTML":      reflect.ValueOf((*template.HTML)(nil)),
		"HTMLAttr":  reflect.ValueOf((*template.HTMLAttr)(nil)),
		"JS":        reflect.ValueOf((*template.JS)(nil)),
		"JSStr":     reflect.ValueOf((*template.JSStr)(nil)),
		"Srcset":    reflect.ValueOf((*template.Srcset)(nil)),
		"Template":  reflect.ValueOf((*template.Template)(nil)),
		"URL":       reflect.ValueOf((*template.URL)(nil)),
	}
}
