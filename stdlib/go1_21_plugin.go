// Code generated by 'yaegi extract plugin'. DO NOT EDIT.

//go:build go1.21 && !go1.22
// +build go1.21,!go1.22

package stdlib

import (
	"plugin"
	"reflect"
)

func init() {
	Symbols["plugin/plugin"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Open": reflect.ValueOf(plugin.Open),

		// type definitions
		"Plugin": reflect.ValueOf((*plugin.Plugin)(nil)),
		"Symbol": reflect.ValueOf((*plugin.Symbol)(nil)),

		// interface wrapper definitions
		"_Symbol": reflect.ValueOf((*_plugin_Symbol)(nil)),
	}
}

// _plugin_Symbol is an interface wrapper for Symbol type
type _plugin_Symbol struct {
	IValue interface{}
}
