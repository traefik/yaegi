package dap

// Code generated by 'go run ../internal/cmd/json_schema'. DO NOT EDIT.

type AttachRequest_Arguments struct {
	F__restart interface{} `json:"__restart,omitempty"`
}

type AttachRequest_Type string

const AttachRequest_Type_Request AttachRequest_Type = "request"

type AttachRequest_Command string

const AttachRequest_Command_Attach AttachRequest_Command = "attach"

type AttachRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type AttachRequestArguments struct {
	F__restart interface{} `json:"__restart,omitempty"`
}

type AttachResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ChecksumAlgorithm string

const ChecksumAlgorithm_MD5 ChecksumAlgorithm = "MD5"
const ChecksumAlgorithm_SHA1 ChecksumAlgorithm = "SHA1"
const ChecksumAlgorithm_SHA256 ChecksumAlgorithm = "SHA256"
const ChecksumAlgorithm_Timestamp ChecksumAlgorithm = "timestamp"

type Checksum struct {
	Algorithm ChecksumAlgorithm `json:"algorithm,omitempty"`
	Checksum  string            `json:"checksum,omitempty"`
}

type Source_PresentationHint string

const Source_PresentationHint_Normal Source_PresentationHint = "normal"
const Source_PresentationHint_Emphasize Source_PresentationHint = "emphasize"
const Source_PresentationHint_Deemphasize Source_PresentationHint = "deemphasize"

type Source struct {
	AdapterData      interface{}             `json:"adapterData,omitempty"`
	Checksums        []*Checksum             `json:"checksums,omitempty"`
	Name             string                  `json:"name,omitempty"`
	Origin           string                  `json:"origin,omitempty"`
	Path             string                  `json:"path,omitempty"`
	PresentationHint Source_PresentationHint `json:"presentationHint,omitempty"`
	SourceReference  int                     `json:"sourceReference,omitempty"`
	Sources          []*Source               `json:"sources,omitempty"`
}

type Breakpoint struct {
	Column               int     `json:"column,omitempty"`
	EndColumn            int     `json:"endColumn,omitempty"`
	EndLine              int     `json:"endLine,omitempty"`
	Id                   int     `json:"id,omitempty"`
	InstructionReference string  `json:"instructionReference,omitempty"`
	Line                 int     `json:"line,omitempty"`
	Message              string  `json:"message,omitempty"`
	Offset               int     `json:"offset,omitempty"`
	Source               *Source `json:"source,omitempty"`
	Verified             bool    `json:"verified,omitempty"`
}

type BreakpointEvent_Event string

const BreakpointEvent_Event_Breakpoint BreakpointEvent_Event = "breakpoint"

type BreakpointEvent_Body struct {
	Breakpoint *Breakpoint `json:"breakpoint,omitempty"`
	Reason     string      `json:"reason,omitempty"`
}

type BreakpointEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type BreakpointLocation struct {
	Column    int `json:"column,omitempty"`
	EndColumn int `json:"endColumn,omitempty"`
	EndLine   int `json:"endLine,omitempty"`
	Line      int `json:"line,omitempty"`
}

type BreakpointLocationsArguments struct {
	Column    int     `json:"column,omitempty"`
	EndColumn int     `json:"endColumn,omitempty"`
	EndLine   int     `json:"endLine,omitempty"`
	Line      int     `json:"line,omitempty"`
	Source    *Source `json:"source,omitempty"`
}

type BreakpointLocationsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type BreakpointLocationsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type CancelArguments struct {
	ProgressId string `json:"progressId,omitempty"`
	RequestId  int    `json:"requestId,omitempty"`
}

type CancelRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type CancelResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ExceptionBreakpointsFilter struct {
	ConditionDescription string `json:"conditionDescription,omitempty"`
	Default              bool   `json:"default,omitempty"`
	Description          string `json:"description,omitempty"`
	Filter               string `json:"filter,omitempty"`
	Label                string `json:"label,omitempty"`
	SupportsCondition    bool   `json:"supportsCondition,omitempty"`
}

type ColumnDescriptor_Type string

const ColumnDescriptor_Type_String ColumnDescriptor_Type = "string"
const ColumnDescriptor_Type_Number ColumnDescriptor_Type = "number"
const ColumnDescriptor_Type_Boolean ColumnDescriptor_Type = "boolean"
const ColumnDescriptor_Type_UnixTimestampUTC ColumnDescriptor_Type = "unixTimestampUTC"

type ColumnDescriptor struct {
	AttributeName string                `json:"attributeName,omitempty"`
	Format        string                `json:"format,omitempty"`
	Label         string                `json:"label,omitempty"`
	Type          ColumnDescriptor_Type `json:"type,omitempty"`
	Width         int                   `json:"width,omitempty"`
}

type Capabilities struct {
	AdditionalModuleColumns            []*ColumnDescriptor           `json:"additionalModuleColumns,omitempty"`
	CompletionTriggerCharacters        []string                      `json:"completionTriggerCharacters,omitempty"`
	ExceptionBreakpointFilters         []*ExceptionBreakpointsFilter `json:"exceptionBreakpointFilters,omitempty"`
	SupportSuspendDebuggee             bool                          `json:"supportSuspendDebuggee,omitempty"`
	SupportTerminateDebuggee           bool                          `json:"supportTerminateDebuggee,omitempty"`
	SupportedChecksumAlgorithms        []ChecksumAlgorithm           `json:"supportedChecksumAlgorithms,omitempty"`
	SupportsBreakpointLocationsRequest bool                          `json:"supportsBreakpointLocationsRequest,omitempty"`
	SupportsCancelRequest              bool                          `json:"supportsCancelRequest,omitempty"`
	SupportsClipboardContext           bool                          `json:"supportsClipboardContext,omitempty"`
	SupportsCompletionsRequest         bool                          `json:"supportsCompletionsRequest,omitempty"`
	SupportsConditionalBreakpoints     bool                          `json:"supportsConditionalBreakpoints,omitempty"`
	SupportsConfigurationDoneRequest   bool                          `json:"supportsConfigurationDoneRequest,omitempty"`
	SupportsDataBreakpoints            bool                          `json:"supportsDataBreakpoints,omitempty"`
	SupportsDelayedStackTraceLoading   bool                          `json:"supportsDelayedStackTraceLoading,omitempty"`
	SupportsDisassembleRequest         bool                          `json:"supportsDisassembleRequest,omitempty"`
	SupportsEvaluateForHovers          bool                          `json:"supportsEvaluateForHovers,omitempty"`
	SupportsExceptionFilterOptions     bool                          `json:"supportsExceptionFilterOptions,omitempty"`
	SupportsExceptionInfoRequest       bool                          `json:"supportsExceptionInfoRequest,omitempty"`
	SupportsExceptionOptions           bool                          `json:"supportsExceptionOptions,omitempty"`
	SupportsFunctionBreakpoints        bool                          `json:"supportsFunctionBreakpoints,omitempty"`
	SupportsGotoTargetsRequest         bool                          `json:"supportsGotoTargetsRequest,omitempty"`
	SupportsHitConditionalBreakpoints  bool                          `json:"supportsHitConditionalBreakpoints,omitempty"`
	SupportsInstructionBreakpoints     bool                          `json:"supportsInstructionBreakpoints,omitempty"`
	SupportsLoadedSourcesRequest       bool                          `json:"supportsLoadedSourcesRequest,omitempty"`
	SupportsLogPoints                  bool                          `json:"supportsLogPoints,omitempty"`
	SupportsModulesRequest             bool                          `json:"supportsModulesRequest,omitempty"`
	SupportsReadMemoryRequest          bool                          `json:"supportsReadMemoryRequest,omitempty"`
	SupportsRestartFrame               bool                          `json:"supportsRestartFrame,omitempty"`
	SupportsRestartRequest             bool                          `json:"supportsRestartRequest,omitempty"`
	SupportsSetExpression              bool                          `json:"supportsSetExpression,omitempty"`
	SupportsSetVariable                bool                          `json:"supportsSetVariable,omitempty"`
	SupportsStepBack                   bool                          `json:"supportsStepBack,omitempty"`
	SupportsStepInTargetsRequest       bool                          `json:"supportsStepInTargetsRequest,omitempty"`
	SupportsSteppingGranularity        bool                          `json:"supportsSteppingGranularity,omitempty"`
	SupportsTerminateRequest           bool                          `json:"supportsTerminateRequest,omitempty"`
	SupportsTerminateThreadsRequest    bool                          `json:"supportsTerminateThreadsRequest,omitempty"`
	SupportsValueFormattingOptions     bool                          `json:"supportsValueFormattingOptions,omitempty"`
	SupportsWriteMemoryRequest         bool                          `json:"supportsWriteMemoryRequest,omitempty"`
}

type CapabilitiesEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type CompletionItemType string

const CompletionItemType_Method CompletionItemType = "method"
const CompletionItemType_Function CompletionItemType = "function"
const CompletionItemType_Constructor CompletionItemType = "constructor"
const CompletionItemType_Field CompletionItemType = "field"
const CompletionItemType_Variable CompletionItemType = "variable"
const CompletionItemType_Class CompletionItemType = "class"
const CompletionItemType_Interface CompletionItemType = "interface"
const CompletionItemType_Module CompletionItemType = "module"
const CompletionItemType_Property CompletionItemType = "property"
const CompletionItemType_Unit CompletionItemType = "unit"
const CompletionItemType_Value CompletionItemType = "value"
const CompletionItemType_Enum CompletionItemType = "enum"
const CompletionItemType_Keyword CompletionItemType = "keyword"
const CompletionItemType_Snippet CompletionItemType = "snippet"
const CompletionItemType_Text CompletionItemType = "text"
const CompletionItemType_Color CompletionItemType = "color"
const CompletionItemType_File CompletionItemType = "file"
const CompletionItemType_Reference CompletionItemType = "reference"
const CompletionItemType_Customcolor CompletionItemType = "customcolor"

type CompletionItem struct {
	Label           string             `json:"label,omitempty"`
	Length          int                `json:"length,omitempty"`
	SelectionLength int                `json:"selectionLength,omitempty"`
	SelectionStart  int                `json:"selectionStart,omitempty"`
	SortText        string             `json:"sortText,omitempty"`
	Start           int                `json:"start,omitempty"`
	Text            string             `json:"text,omitempty"`
	Type            CompletionItemType `json:"type,omitempty"`
}

type CompletionsArguments struct {
	Column  int    `json:"column,omitempty"`
	FrameId int    `json:"frameId,omitempty"`
	Line    int    `json:"line,omitempty"`
	Text    string `json:"text,omitempty"`
}

type CompletionsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type CompletionsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ConfigurationDoneRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ConfigurationDoneResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ContinueArguments struct {
	ThreadId int `json:"threadId,omitempty"`
}

type ContinueRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ContinueResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ContinuedEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type DataBreakpointAccessType string

const DataBreakpointAccessType_Read DataBreakpointAccessType = "read"
const DataBreakpointAccessType_Write DataBreakpointAccessType = "write"
const DataBreakpointAccessType_ReadWrite DataBreakpointAccessType = "readWrite"

type DataBreakpoint struct {
	AccessType   DataBreakpointAccessType `json:"accessType,omitempty"`
	Condition    string                   `json:"condition,omitempty"`
	DataId       string                   `json:"dataId,omitempty"`
	HitCondition string                   `json:"hitCondition,omitempty"`
}

type DataBreakpointInfoArguments struct {
	Name               string `json:"name,omitempty"`
	VariablesReference int    `json:"variablesReference,omitempty"`
}

type DataBreakpointInfoRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type DataBreakpointInfoResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type DisassembleArguments struct {
	InstructionCount  int    `json:"instructionCount,omitempty"`
	InstructionOffset int    `json:"instructionOffset,omitempty"`
	MemoryReference   string `json:"memoryReference,omitempty"`
	Offset            int    `json:"offset,omitempty"`
	ResolveSymbols    bool   `json:"resolveSymbols,omitempty"`
}

type DisassembleRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type DisassembleResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type DisassembledInstruction struct {
	Address          string  `json:"address,omitempty"`
	Column           int     `json:"column,omitempty"`
	EndColumn        int     `json:"endColumn,omitempty"`
	EndLine          int     `json:"endLine,omitempty"`
	Instruction      string  `json:"instruction,omitempty"`
	InstructionBytes string  `json:"instructionBytes,omitempty"`
	Line             int     `json:"line,omitempty"`
	Location         *Source `json:"location,omitempty"`
	Symbol           string  `json:"symbol,omitempty"`
}

type DisconnectArguments struct {
	Restart           bool `json:"restart,omitempty"`
	SuspendDebuggee   bool `json:"suspendDebuggee,omitempty"`
	TerminateDebuggee bool `json:"terminateDebuggee,omitempty"`
}

type DisconnectRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type DisconnectResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ErrorResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ValueFormat struct {
	Hex bool `json:"hex,omitempty"`
}

type EvaluateArguments struct {
	Context    string       `json:"context,omitempty"`
	Expression string       `json:"expression,omitempty"`
	Format     *ValueFormat `json:"format,omitempty"`
	FrameId    int          `json:"frameId,omitempty"`
}

type EvaluateRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type EvaluateResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type Event struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ExceptionBreakMode string

const ExceptionBreakMode_Never ExceptionBreakMode = "never"
const ExceptionBreakMode_Always ExceptionBreakMode = "always"
const ExceptionBreakMode_Unhandled ExceptionBreakMode = "unhandled"
const ExceptionBreakMode_UserUnhandled ExceptionBreakMode = "userUnhandled"

type ExceptionDetails struct {
	EvaluateName   string              `json:"evaluateName,omitempty"`
	FullTypeName   string              `json:"fullTypeName,omitempty"`
	InnerException []*ExceptionDetails `json:"innerException,omitempty"`
	Message        string              `json:"message,omitempty"`
	StackTrace     string              `json:"stackTrace,omitempty"`
	TypeName       string              `json:"typeName,omitempty"`
}

type ExceptionFilterOptions struct {
	Condition string `json:"condition,omitempty"`
	FilterId  string `json:"filterId,omitempty"`
}

type ExceptionInfoArguments struct {
	ThreadId int `json:"threadId,omitempty"`
}

type ExceptionInfoRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ExceptionInfoResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ExceptionPathSegment struct {
	Names  []string `json:"names,omitempty"`
	Negate bool     `json:"negate,omitempty"`
}

type ExceptionOptions struct {
	BreakMode ExceptionBreakMode      `json:"breakMode,omitempty"`
	Path      []*ExceptionPathSegment `json:"path,omitempty"`
}

type ExitedEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type FunctionBreakpoint struct {
	Condition    string `json:"condition,omitempty"`
	HitCondition string `json:"hitCondition,omitempty"`
	Name         string `json:"name,omitempty"`
}

type GotoArguments struct {
	TargetId int `json:"targetId,omitempty"`
	ThreadId int `json:"threadId,omitempty"`
}

type GotoRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type GotoResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type GotoTarget struct {
	Column                      int    `json:"column,omitempty"`
	EndColumn                   int    `json:"endColumn,omitempty"`
	EndLine                     int    `json:"endLine,omitempty"`
	Id                          int    `json:"id,omitempty"`
	InstructionPointerReference string `json:"instructionPointerReference,omitempty"`
	Label                       string `json:"label,omitempty"`
	Line                        int    `json:"line,omitempty"`
}

type GotoTargetsArguments struct {
	Column int     `json:"column,omitempty"`
	Line   int     `json:"line,omitempty"`
	Source *Source `json:"source,omitempty"`
}

type GotoTargetsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type GotoTargetsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type InitializeRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type InitializeRequestArguments struct {
	AdapterID                    string `json:"adapterID,omitempty"`
	ClientID                     string `json:"clientID,omitempty"`
	ClientName                   string `json:"clientName,omitempty"`
	ColumnsStartAt1              bool   `json:"columnsStartAt1,omitempty"`
	LinesStartAt1                bool   `json:"linesStartAt1,omitempty"`
	Locale                       string `json:"locale,omitempty"`
	PathFormat                   string `json:"pathFormat,omitempty"`
	SupportsInvalidatedEvent     bool   `json:"supportsInvalidatedEvent,omitempty"`
	SupportsMemoryReferences     bool   `json:"supportsMemoryReferences,omitempty"`
	SupportsProgressReporting    bool   `json:"supportsProgressReporting,omitempty"`
	SupportsRunInTerminalRequest bool   `json:"supportsRunInTerminalRequest,omitempty"`
	SupportsVariablePaging       bool   `json:"supportsVariablePaging,omitempty"`
	SupportsVariableType         bool   `json:"supportsVariableType,omitempty"`
}

type InitializeResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type InitializedEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type InstructionBreakpoint struct {
	Condition            string `json:"condition,omitempty"`
	HitCondition         string `json:"hitCondition,omitempty"`
	InstructionReference string `json:"instructionReference,omitempty"`
	Offset               int    `json:"offset,omitempty"`
}

type InvalidatedEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type LaunchRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type LaunchRequestArguments struct {
	F__restart interface{} `json:"__restart,omitempty"`
	NoDebug    bool        `json:"noDebug,omitempty"`
}

type LaunchResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type LoadedSourceEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type LoadedSourcesRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type LoadedSourcesResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type Message struct {
	Format        string            `json:"format,omitempty"`
	Id            int               `json:"id,omitempty"`
	SendTelemetry bool              `json:"sendTelemetry,omitempty"`
	ShowUser      bool              `json:"showUser,omitempty"`
	Url           string            `json:"url,omitempty"`
	UrlLabel      string            `json:"urlLabel,omitempty"`
	Variables     map[string]string `json:"variables,omitempty"`
}

type Module struct {
	AddressRange   string      `json:"addressRange,omitempty"`
	DateTimeStamp  string      `json:"dateTimeStamp,omitempty"`
	Id             interface{} `json:"id,omitempty"`
	IsOptimized    bool        `json:"isOptimized,omitempty"`
	IsUserCode     bool        `json:"isUserCode,omitempty"`
	Name           string      `json:"name,omitempty"`
	Path           string      `json:"path,omitempty"`
	SymbolFilePath string      `json:"symbolFilePath,omitempty"`
	SymbolStatus   string      `json:"symbolStatus,omitempty"`
	Version        string      `json:"version,omitempty"`
}

type ModuleEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ModulesArguments struct {
	ModuleCount int `json:"moduleCount,omitempty"`
	StartModule int `json:"startModule,omitempty"`
}

type ModulesRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ModulesResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ModulesViewDescriptor struct {
	Columns []*ColumnDescriptor `json:"columns,omitempty"`
}

type SteppingGranularity string

const SteppingGranularity_Statement SteppingGranularity = "statement"
const SteppingGranularity_Line SteppingGranularity = "line"
const SteppingGranularity_Instruction SteppingGranularity = "instruction"

type NextArguments struct {
	Granularity SteppingGranularity `json:"granularity,omitempty"`
	ThreadId    int                 `json:"threadId,omitempty"`
}

type NextRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type NextResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type OutputEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type PauseArguments struct {
	ThreadId int `json:"threadId,omitempty"`
}

type PauseRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type PauseResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ProcessEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ProgressEndEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ProgressStartEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ProgressUpdateEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ProtocolMessage struct {
	Seq  int                `json:"seq,omitempty"`
	Type AttachRequest_Type `json:"type,omitempty"`
}

type ReadMemoryArguments struct {
	Count           int    `json:"count,omitempty"`
	MemoryReference string `json:"memoryReference,omitempty"`
	Offset          int    `json:"offset,omitempty"`
}

type ReadMemoryRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ReadMemoryResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type Request struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type Response struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type RestartArguments struct {
	Arguments interface{} `json:"arguments,omitempty"`
}

type RestartFrameArguments struct {
	FrameId int `json:"frameId,omitempty"`
}

type RestartFrameRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type RestartFrameResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type RestartRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type RestartResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type ReverseContinueArguments struct {
	ThreadId int `json:"threadId,omitempty"`
}

type ReverseContinueRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ReverseContinueResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type RunInTerminalRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type RunInTerminalRequestArguments_Kind string

const RunInTerminalRequestArguments_Kind_Integrated RunInTerminalRequestArguments_Kind = "integrated"
const RunInTerminalRequestArguments_Kind_External RunInTerminalRequestArguments_Kind = "external"

type RunInTerminalRequestArguments struct {
	Args  []string                           `json:"args,omitempty"`
	Cwd   string                             `json:"cwd,omitempty"`
	Env   map[string]interface{}             `json:"env,omitempty"`
	Kind  RunInTerminalRequestArguments_Kind `json:"kind,omitempty"`
	Title string                             `json:"title,omitempty"`
}

type RunInTerminalResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type Scope struct {
	Column             int     `json:"column,omitempty"`
	EndColumn          int     `json:"endColumn,omitempty"`
	EndLine            int     `json:"endLine,omitempty"`
	Expensive          bool    `json:"expensive,omitempty"`
	IndexedVariables   int     `json:"indexedVariables,omitempty"`
	Line               int     `json:"line,omitempty"`
	Name               string  `json:"name,omitempty"`
	NamedVariables     int     `json:"namedVariables,omitempty"`
	PresentationHint   string  `json:"presentationHint,omitempty"`
	Source             *Source `json:"source,omitempty"`
	VariablesReference int     `json:"variablesReference,omitempty"`
}

type ScopesArguments struct {
	FrameId int `json:"frameId,omitempty"`
}

type ScopesRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ScopesResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SourceBreakpoint struct {
	Column       int    `json:"column,omitempty"`
	Condition    string `json:"condition,omitempty"`
	HitCondition string `json:"hitCondition,omitempty"`
	Line         int    `json:"line,omitempty"`
	LogMessage   string `json:"logMessage,omitempty"`
}

type SetBreakpointsArguments struct {
	Breakpoints    []*SourceBreakpoint `json:"breakpoints,omitempty"`
	Lines          []int               `json:"lines,omitempty"`
	Source         *Source             `json:"source,omitempty"`
	SourceModified bool                `json:"sourceModified,omitempty"`
}

type SetBreakpointsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetBreakpointsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SetDataBreakpointsArguments struct {
	Breakpoints []*DataBreakpoint `json:"breakpoints,omitempty"`
}

type SetDataBreakpointsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetDataBreakpointsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SetExceptionBreakpointsArguments struct {
	ExceptionOptions []*ExceptionOptions       `json:"exceptionOptions,omitempty"`
	FilterOptions    []*ExceptionFilterOptions `json:"filterOptions,omitempty"`
	Filters          []string                  `json:"filters,omitempty"`
}

type SetExceptionBreakpointsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetExceptionBreakpointsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SetExpressionArguments struct {
	Expression string       `json:"expression,omitempty"`
	Format     *ValueFormat `json:"format,omitempty"`
	FrameId    int          `json:"frameId,omitempty"`
	Value      string       `json:"value,omitempty"`
}

type SetExpressionRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetExpressionResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SetFunctionBreakpointsArguments struct {
	Breakpoints []*FunctionBreakpoint `json:"breakpoints,omitempty"`
}

type SetFunctionBreakpointsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetFunctionBreakpointsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SetInstructionBreakpointsArguments struct {
	Breakpoints []*InstructionBreakpoint `json:"breakpoints,omitempty"`
}

type SetInstructionBreakpointsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetInstructionBreakpointsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SetVariableArguments struct {
	Format             *ValueFormat `json:"format,omitempty"`
	Name               string       `json:"name,omitempty"`
	Value              string       `json:"value,omitempty"`
	VariablesReference int          `json:"variablesReference,omitempty"`
}

type SetVariableRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SetVariableResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type SourceArguments struct {
	Source          *Source `json:"source,omitempty"`
	SourceReference int     `json:"sourceReference,omitempty"`
}

type SourceRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type SourceResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type StackFrame_PresentationHint string

const StackFrame_PresentationHint_Normal StackFrame_PresentationHint = "normal"
const StackFrame_PresentationHint_Label StackFrame_PresentationHint = "label"
const StackFrame_PresentationHint_Subtle StackFrame_PresentationHint = "subtle"

type StackFrame struct {
	CanRestart                  bool                        `json:"canRestart,omitempty"`
	Column                      int                         `json:"column,omitempty"`
	EndColumn                   int                         `json:"endColumn,omitempty"`
	EndLine                     int                         `json:"endLine,omitempty"`
	Id                          int                         `json:"id,omitempty"`
	InstructionPointerReference string                      `json:"instructionPointerReference,omitempty"`
	Line                        int                         `json:"line,omitempty"`
	ModuleId                    interface{}                 `json:"moduleId,omitempty"`
	Name                        string                      `json:"name,omitempty"`
	PresentationHint            StackFrame_PresentationHint `json:"presentationHint,omitempty"`
	Source                      *Source                     `json:"source,omitempty"`
}

type StackFrameFormat struct {
	Hex             bool `json:"hex,omitempty"`
	IncludeAll      bool `json:"includeAll,omitempty"`
	Line            bool `json:"line,omitempty"`
	Module          bool `json:"module,omitempty"`
	ParameterNames  bool `json:"parameterNames,omitempty"`
	ParameterTypes  bool `json:"parameterTypes,omitempty"`
	ParameterValues bool `json:"parameterValues,omitempty"`
	Parameters      bool `json:"parameters,omitempty"`
}

type StackTraceArguments struct {
	Format     *StackFrameFormat `json:"format,omitempty"`
	Levels     int               `json:"levels,omitempty"`
	StartFrame int               `json:"startFrame,omitempty"`
	ThreadId   int               `json:"threadId,omitempty"`
}

type StackTraceRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type StackTraceResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type StepBackArguments struct {
	Granularity SteppingGranularity `json:"granularity,omitempty"`
	ThreadId    int                 `json:"threadId,omitempty"`
}

type StepBackRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type StepBackResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type StepInArguments struct {
	Granularity SteppingGranularity `json:"granularity,omitempty"`
	TargetId    int                 `json:"targetId,omitempty"`
	ThreadId    int                 `json:"threadId,omitempty"`
}

type StepInRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type StepInResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type StepInTarget struct {
	Id    int    `json:"id,omitempty"`
	Label string `json:"label,omitempty"`
}

type StepInTargetsArguments struct {
	FrameId int `json:"frameId,omitempty"`
}

type StepInTargetsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type StepInTargetsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type StepOutArguments struct {
	Granularity SteppingGranularity `json:"granularity,omitempty"`
	ThreadId    int                 `json:"threadId,omitempty"`
}

type StepOutRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type StepOutResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type StoppedEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type TerminateArguments struct {
	Restart bool `json:"restart,omitempty"`
}

type TerminateRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type TerminateResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type TerminateThreadsArguments struct {
	ThreadIds []int `json:"threadIds,omitempty"`
}

type TerminateThreadsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type TerminateThreadsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type TerminatedEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type Thread struct {
	Id   int    `json:"id,omitempty"`
	Name string `json:"name,omitempty"`
}

type ThreadEvent struct {
	Body  *BreakpointEvent_Body `json:"body,omitempty"`
	Event BreakpointEvent_Event `json:"event,omitempty"`
	Seq   int                   `json:"seq,omitempty"`
	Type  AttachRequest_Type    `json:"type,omitempty"`
}

type ThreadsRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type ThreadsResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type VariablePresentationHint struct {
	Attributes []string `json:"attributes,omitempty"`
	Kind       string   `json:"kind,omitempty"`
	Visibility string   `json:"visibility,omitempty"`
}

type Variable struct {
	EvaluateName       string                    `json:"evaluateName,omitempty"`
	IndexedVariables   int                       `json:"indexedVariables,omitempty"`
	MemoryReference    string                    `json:"memoryReference,omitempty"`
	Name               string                    `json:"name,omitempty"`
	NamedVariables     int                       `json:"namedVariables,omitempty"`
	PresentationHint   *VariablePresentationHint `json:"presentationHint,omitempty"`
	Type               string                    `json:"type,omitempty"`
	Value              string                    `json:"value,omitempty"`
	VariablesReference int                       `json:"variablesReference,omitempty"`
}

type VariablesArguments_Filter string

const VariablesArguments_Filter_Indexed VariablesArguments_Filter = "indexed"
const VariablesArguments_Filter_Named VariablesArguments_Filter = "named"

type VariablesArguments struct {
	Count              int                       `json:"count,omitempty"`
	Filter             VariablesArguments_Filter `json:"filter,omitempty"`
	Format             *ValueFormat              `json:"format,omitempty"`
	Start              int                       `json:"start,omitempty"`
	VariablesReference int                       `json:"variablesReference,omitempty"`
}

type VariablesRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type VariablesResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}

type WriteMemoryArguments struct {
	AllowPartial    bool   `json:"allowPartial,omitempty"`
	Data            string `json:"data,omitempty"`
	MemoryReference string `json:"memoryReference,omitempty"`
	Offset          int    `json:"offset,omitempty"`
}

type WriteMemoryRequest struct {
	Arguments *AttachRequest_Arguments `json:"arguments,omitempty"`
	Command   AttachRequest_Command    `json:"command,omitempty"`
	Seq       int                      `json:"seq,omitempty"`
	Type      AttachRequest_Type       `json:"type,omitempty"`
}

type WriteMemoryResponse struct {
	Body        interface{}        `json:"body,omitempty"`
	Command     string             `json:"command,omitempty"`
	Message     string             `json:"message,omitempty"`
	Request_seq int                `json:"request_seq,omitempty"`
	Seq         int                `json:"seq,omitempty"`
	Success     bool               `json:"success,omitempty"`
	Type        AttachRequest_Type `json:"type,omitempty"`
}
